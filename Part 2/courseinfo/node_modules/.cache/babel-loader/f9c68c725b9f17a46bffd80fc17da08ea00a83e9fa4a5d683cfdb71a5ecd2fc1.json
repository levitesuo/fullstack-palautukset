{"ast":null,"code":"var _jsxFileName = \"/home/leevisuo/fullstack/Part 2/courseinfo/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CoursePart = _ref => {\n  let {\n    part\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [part.name, \" \", part.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 3\n  }, this);\n};\n_c = CoursePart;\nconst CourseContent = _ref2 => {\n  let {\n    courseParts\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: courseParts.map(part => /*#__PURE__*/_jsxDEV(CoursePart, {\n      part: part\n    }, part.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c2 = CourseContent;\nconst Course = _ref3 => {\n  let {\n    course\n  } = _ref3;\n  const sum = course.parts.reduce((accumulator, currentValue) => accumulator + currentValue.exercises, 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CourseContent, {\n      courseParts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"total of \", sum, \" exercises\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c3 = Course;\nconst App = () => {\n  const course = {\n    id: 1,\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Course, {\n    course: course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CoursePart\");\n$RefreshReg$(_c2, \"CourseContent\");\n$RefreshReg$(_c3, \"Course\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["CoursePart","_ref","part","_jsxDEV","children","name","exercises","fileName","_jsxFileName","lineNumber","columnNumber","_c","CourseContent","_ref2","courseParts","_Fragment","map","id","_c2","Course","_ref3","course","sum","parts","reduce","accumulator","currentValue","_c3","App","_c4","$RefreshReg$"],"sources":["/home/leevisuo/fullstack/Part 2/courseinfo/src/App.js"],"sourcesContent":["const CoursePart = ({part}) => (\n  <p>{part.name} {part.exercises}</p>\n)\n\nconst CourseContent = ({courseParts}) => (\n    <>\n      {courseParts.map(part => \n        <CoursePart key={part.id} part={part} />\n      )}\n    </>\n)\n\nconst Course = ({course}) => {\n  const sum = course.parts.reduce(\n    (accumulator, currentValue) => accumulator + currentValue.exercises, 0\n  )\n  return (\n    <>\n      <h1>{course.name}</h1>\n      <CourseContent courseParts={course.parts} />\n      <p>total of {sum} exercises</p>\n    </>\n  )\n}\n\nconst App = () => {\n  const course = {\n    id: 1,\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10,\n        id: 1\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7,\n        id: 2\n      },\n      {\n        name: 'State of a component',\n        exercises: 14,\n        id: 3\n      }\n    ]\n  }\n\n  return <Course course={course} />\n}\n\nexport default App\n"],"mappings":";;;AAAA,MAAMA,UAAU,GAAGC,IAAA;EAAA,IAAC;IAACC;EAAI,CAAC,GAAAD,IAAA;EAAA,oBACxBE,OAAA;IAAAC,QAAA,GAAIF,IAAI,CAACG,IAAI,EAAC,GAAC,EAACH,IAAI,CAACI,SAAS;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAAA,CACpC;AAAAC,EAAA,GAFKX,UAAU;AAIhB,MAAMY,aAAa,GAAGC,KAAA;EAAA,IAAC;IAACC;EAAW,CAAC,GAAAD,KAAA;EAAA,oBAChCV,OAAA,CAAAY,SAAA;IAAAX,QAAA,EACGU,WAAW,CAACE,GAAG,CAACd,IAAI,iBACnBC,OAAA,CAACH,UAAU;MAAeE,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACe,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACzC;EAAC,gBACD,CAAC;AAAA,CACN;AAAAQ,GAAA,GANKN,aAAa;AAQnB,MAAMO,MAAM,GAAGC,KAAA,IAAc;EAAA,IAAb;IAACC;EAAM,CAAC,GAAAD,KAAA;EACtB,MAAME,GAAG,GAAGD,MAAM,CAACE,KAAK,CAACC,MAAM,CAC7B,CAACC,WAAW,EAAEC,YAAY,KAAKD,WAAW,GAAGC,YAAY,CAACpB,SAAS,EAAE,CACvE,CAAC;EACD,oBACEH,OAAA,CAAAY,SAAA;IAAAX,QAAA,gBACED,OAAA;MAAAC,QAAA,EAAKiB,MAAM,CAAChB;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBP,OAAA,CAACS,aAAa;MAACE,WAAW,EAAEO,MAAM,CAACE;IAAM;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CP,OAAA;MAAAC,QAAA,GAAG,WAAS,EAACkB,GAAG,EAAC,YAAU;IAAA;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eAC/B,CAAC;AAEP,CAAC;AAAAiB,GAAA,GAXKR,MAAM;AAaZ,MAAMS,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMP,MAAM,GAAG;IACbJ,EAAE,EAAE,CAAC;IACLZ,IAAI,EAAE,oCAAoC;IAC1CkB,KAAK,EAAE,CACL;MACElB,IAAI,EAAE,uBAAuB;MAC7BC,SAAS,EAAE,EAAE;MACbW,EAAE,EAAE;IACN,CAAC,EACD;MACEZ,IAAI,EAAE,0BAA0B;MAChCC,SAAS,EAAE,CAAC;MACZW,EAAE,EAAE;IACN,CAAC,EACD;MACEZ,IAAI,EAAE,sBAAsB;MAC5BC,SAAS,EAAE,EAAE;MACbW,EAAE,EAAE;IACN,CAAC;EAEL,CAAC;EAED,oBAAOd,OAAA,CAACgB,MAAM;IAACE,MAAM,EAAEA;EAAO;IAAAd,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnC,CAAC;AAAAmB,GAAA,GAxBKD,GAAG;AA0BT,eAAeA,GAAG;AAAA,IAAAjB,EAAA,EAAAO,GAAA,EAAAS,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAZ,GAAA;AAAAY,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}